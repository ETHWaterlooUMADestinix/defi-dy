{
  "contractName": "EncryptedSender",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "addAuthorizedSender",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "removeAuthorizedSender",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "topicHash",
          "type": "bytes32"
        }
      ],
      "name": "getMessage",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "topicHash",
          "type": "bytes32"
        }
      ],
      "name": "getPublicKey",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient_",
          "type": "address"
        },
        {
          "name": "topicHash",
          "type": "bytes32"
        },
        {
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "sendMessage",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient_",
          "type": "address"
        },
        {
          "name": "topicHash",
          "type": "bytes32"
        }
      ],
      "name": "removeMessage",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "publicKey",
          "type": "bytes"
        },
        {
          "name": "topicHash",
          "type": "bytes32"
        }
      ],
      "name": "setPublicKey",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "isAuthorizedSender",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"recipient_\",\"type\":\"address\"},{\"name\":\"topicHash\",\"type\":\"bytes32\"},{\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"sendMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"isAuthorizedSender\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient_\",\"type\":\"address\"},{\"name\":\"topicHash\",\"type\":\"bytes32\"}],\"name\":\"removeMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"topicHash\",\"type\":\"bytes32\"}],\"name\":\"getPublicKey\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"publicKey\",\"type\":\"bytes\"},{\"name\":\"topicHash\",\"type\":\"bytes32\"}],\"name\":\"setPublicKey\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"removeAuthorizedSender\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"topicHash\",\"type\":\"bytes32\"}],\"name\":\"getMessage\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"addAuthorizedSender\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract uses topic hashes as keys and can store a single arbitrary encrypted message per topic at any given time. Note: there's technically nothing that requires the topics hashed or for the messages to be encrypted. This contract is built for the following specific use case: * - The sender and recipient know the topics ahead of time. This can either be communicated elsewhere or be implicit. * - Only one message per topic is stored at any given time. * - Only addresses that are authorized by the recipient can send messages. These authorized parties can overwrite, but not delete the previous message for a particular topic.\",\"methods\":{\"getMessage(address,bytes32)\":{\"details\":\"To decrypt messages (this requires access to the recipient's private keys), use the decryptMessage() function in common/Crypto.js.\"},\"getPublicKey(address,bytes32)\":{\"details\":\"Senders may need this public key to encrypt messages that only the `recipient` can read. If the public key is communicated offchain, this field may be left empty.\"},\"sendMessage(address,bytes32,bytes)\":{\"details\":\"To construct an encrypted message, use the encryptMessage() in common/Crypto.js. The public key for the recipient can be obtained using the getPublicKey() method.\"},\"setPublicKey(bytes,bytes32)\":{\"details\":\"Note: setting the public key is optional - if the publicKey is communicated or can be derived offchain by the sender, there is no need to set it here. Because there are no specific requirements for the publicKey, there is also no verification of its validity other than its length.\"}},\"title\":\"Contract for sending keyed encrypted messages via the EVM\"},\"userdoc\":{\"methods\":{\"addAuthorizedSender(address)\":{\"notice\":\"Authorizes `sender` to send messages to the caller.\"},\"getMessage(address,bytes32)\":{\"notice\":\"Gets the current stored message corresponding to `recipient` and `topicHash`.\"},\"getPublicKey(address,bytes32)\":{\"notice\":\"Gets the stored public key for a particular `recipient` and `topicHash`. Return value will be 0 length if no public key has been set.\"},\"isAuthorizedSender(address,address)\":{\"notice\":\"Returns true if the `sender` is authorized to send to the `recipient`.\"},\"removeAuthorizedSender(address)\":{\"notice\":\"Revokes `sender`'s authorization to send messages to the caller.\"},\"sendMessage(address,bytes32,bytes)\":{\"notice\":\"Sends `message` to `recipient_` categorized by a particular `topicHash`. This will overwrite any previous messages sent to this `recipient` with this `topicHash`.\"},\"setPublicKey(bytes,bytes32)\":{\"notice\":\"Sets the public key for this caller and topicHash.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/kendrick/Development/Ethereum/defi-dy/contracts/uma/core/contracts/EncryptedSender.sol\":\"EncryptedSender\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/kendrick/Development/Ethereum/defi-dy/contracts/uma/core/contracts/EncryptedSender.sol\":{\"keccak256\":\"0xa61c04f31df1f085aa1e47644e94998462f0f2bd538b0a7064cd51234806512b\",\"urls\":[\"bzzr://aef7f04d2af4e40a4bbbe3a6619f9c6dd9009e7dcccfedd11b196aa33efba454\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610ce8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063cac42c991161005b578063cac42c9914610303578063cbd57967146103c8578063ef74e0ac1461040c578063fa7229ee146104d357610088565b80630cd7546a1461008d5780631904ff0e146101725780631bc9bf7d146101ee5780637cefdd5d1461023c575b600080fd5b610170600480360360608110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156100ea57600080fd5b8201836020820111156100fc57600080fd5b8035906020019184600183028401116401000000008311171561011e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610517565b005b6101d46004803603604081101561018857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105eb565b604051808215151515815260200191505060405180910390f35b61023a6004803603604081101561020457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106b7565b005b6102886004803603604081101561025257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061079e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102c85780820151818401526020810190506102ad565b50505050905090810190601f1680156102f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103c66004803603604081101561031957600080fd5b810190808035906020019064010000000081111561033657600080fd5b82018360208201111561034857600080fd5b8035906020019184600183028401116401000000008311171561036a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050610896565b005b61040a600480360360208110156103de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061097b565b005b6104586004803603604081101561042257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a15565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561049857808201518184015260208101905061047d565b50505050905090810190601f1680156104c55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610515600480360360208110156104e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b0d565b005b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061056333856105eb565b6105b8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610c956028913960400191505060405180910390fd5b8181600001600085815260200190815260200160002060010190805190602001906105e4929190610ba7565b5050505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16806106af57508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b905092915050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061070333846105eb565b610775576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4e6f7420617574686f72697a656420746f2072656d6f7665206d65737361676581525060200191505060405180910390fd5b80600001600083815260200190815260200160002060010160006107999190610c27565b505050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008381526020019081526020016000206000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108895780601f1061085e57610100808354040283529160200191610889565b820191906000526020600020905b81548152906001019060200180831161086c57829003601f168201915b5050505050905092915050565b604082511461090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5075626c6963206b6579206973207468652077726f6e67206c656e677468000081525060200191505060405180910390fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008381526020019081526020016000206000019080519060200190610976929190610ba7565b505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008381526020019081526020016000206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b005780601f10610ad557610100808354040283529160200191610b00565b820191906000526020600020905b815481529060010190602001808311610ae357829003601f168201915b5050505050905092915050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610be857805160ff1916838001178555610c16565b82800160010185558215610c16579182015b82811115610c15578251825591602001919060010190610bfa565b5b509050610c239190610c6f565b5090565b50805460018160011615610100020316600290046000825580601f10610c4d5750610c6c565b601f016020900490600052602060002090810190610c6b9190610c6f565b5b50565b610c9191905b80821115610c8d576000816000905550600101610c75565b5090565b9056fe4e6f7420617574686f72697a656420746f2073656e6420746f207468697320726563697069656e74a165627a7a723058208390c8ccd405cebf4d6ab9e3b9f1fd22ae21cdc865d6f0cb035bbc0b8df9cea80029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063cac42c991161005b578063cac42c9914610303578063cbd57967146103c8578063ef74e0ac1461040c578063fa7229ee146104d357610088565b80630cd7546a1461008d5780631904ff0e146101725780631bc9bf7d146101ee5780637cefdd5d1461023c575b600080fd5b610170600480360360608110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156100ea57600080fd5b8201836020820111156100fc57600080fd5b8035906020019184600183028401116401000000008311171561011e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610517565b005b6101d46004803603604081101561018857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105eb565b604051808215151515815260200191505060405180910390f35b61023a6004803603604081101561020457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106b7565b005b6102886004803603604081101561025257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061079e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102c85780820151818401526020810190506102ad565b50505050905090810190601f1680156102f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103c66004803603604081101561031957600080fd5b810190808035906020019064010000000081111561033657600080fd5b82018360208201111561034857600080fd5b8035906020019184600183028401116401000000008311171561036a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050610896565b005b61040a600480360360208110156103de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061097b565b005b6104586004803603604081101561042257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a15565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561049857808201518184015260208101905061047d565b50505050905090810190601f1680156104c55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610515600480360360208110156104e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b0d565b005b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061056333856105eb565b6105b8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610c956028913960400191505060405180910390fd5b8181600001600085815260200190815260200160002060010190805190602001906105e4929190610ba7565b5050505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16806106af57508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b905092915050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061070333846105eb565b610775576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4e6f7420617574686f72697a656420746f2072656d6f7665206d65737361676581525060200191505060405180910390fd5b80600001600083815260200190815260200160002060010160006107999190610c27565b505050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008381526020019081526020016000206000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108895780601f1061085e57610100808354040283529160200191610889565b820191906000526020600020905b81548152906001019060200180831161086c57829003601f168201915b5050505050905092915050565b604082511461090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5075626c6963206b6579206973207468652077726f6e67206c656e677468000081525060200191505060405180910390fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008381526020019081526020016000206000019080519060200190610976929190610ba7565b505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008381526020019081526020016000206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b005780601f10610ad557610100808354040283529160200191610b00565b820191906000526020600020905b815481529060010190602001808311610ae357829003601f168201915b5050505050905092915050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610be857805160ff1916838001178555610c16565b82800160010185558215610c16579182015b82811115610c15578251825591602001919060010190610bfa565b5b509050610c239190610c6f565b5090565b50805460018160011615610100020316600290046000825580601f10610c4d5750610c6c565b601f016020900490600052602060002090810190610c6b9190610c6f565b5b50565b610c9191905b80821115610c8d576000816000905550600101610c75565b5090565b9056fe4e6f7420617574686f72697a656420746f2073656e6420746f207468697320726563697069656e74a165627a7a723058208390c8ccd405cebf4d6ab9e3b9f1fd22ae21cdc865d6f0cb035bbc0b8df9cea80029",
  "sourceMap": "767:4124:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;767:4124:4;;;;;;;",
  "deployedSourceMap": "767:4124:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;767:4124:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3280:318;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3280:318:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3280:318:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3280:318:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3280:318:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3280:318:4;;;;;;;;;;;;;;;:::i;:::-;;4621:268;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4621:268:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3604:287;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3604:287:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2721:170;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2721:170:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2721:170:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4287:226;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4287:226:4;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4287:226:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4287:226:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4287:226:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4287:226:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1800:130;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1800:130:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;2195:166;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2195:166:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2195:166:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1572:126;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1572:126:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;3280:318;3379:27;3409:10;:22;3420:10;3409:22;;;;;;;;;;;;;;;3379:52;;3449:42;3468:10;3480;3449:18;:42::i;:::-;3441:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3584:7;3546:9;:16;;:27;3563:9;3546:27;;;;;;;;;;;:35;;:45;;;;;;;;;;;;:::i;:::-;;3280:318;;;;:::o;4621:268::-;4705:4;4812:10;:21;4823:9;4812:21;;;;;;;;;;;;;;;:39;;:47;4852:6;4812:47;;;;;;;;;;;;;;;;;;;;;;;;;:70;;;;4876:6;4863:19;;:9;:19;;;4812:70;4805:77;;4621:268;;;;:::o;3604:287::-;3683:27;3713:10;:22;3724:10;3713:22;;;;;;;;;;;;;;;3683:52;;3753:42;3772:10;3784;3753:18;:42::i;:::-;3745:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3849:9;:16;;:27;3866:9;3849:27;;;;;;;;;;;:35;;;3842:42;;;;:::i;:::-;3604:287;;;:::o;2721:170::-;2804:12;2835:10;:21;2846:9;2835:21;;;;;;;;;;;;;;;:28;;:39;2864:9;2835:39;;;;;;;;;;;:49;;2828:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2721:170;;;;:::o;4287:226::-;4397:2;4377:9;:16;:22;4369:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4497:9;4444:10;:22;4455:10;4444:22;;;;;;;;;;;;;;;:29;;:40;4474:9;4444:40;;;;;;;;;;;:50;;:62;;;;;;;;;;;;:::i;:::-;;4287:226;;:::o;1800:130::-;1918:5;1867:10;:22;1878:10;1867:22;;;;;;;;;;;;;;;:40;;:48;1908:6;1867:48;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;1800:130;:::o;2195:166::-;2276:12;2307:10;:21;2318:9;2307:21;;;;;;;;;;;;;;;:28;;:39;2336:9;2307:39;;;;;;;;;;;:47;;2300:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2195:166;;;;:::o;1572:126::-;1687:4;1636:10;:22;1647:10;1636:22;;;;;;;;;;;;;;;:40;;:48;1677:6;1636:48;;;;;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;1572:126;:::o;767:4124::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\n\n/**\n * @title Contract for sending keyed encrypted messages via the EVM\n * @dev This contract uses topic hashes as keys and can store a single arbitrary encrypted message per topic at any\n * given time. Note: there's technically nothing that requires the topics hashed or for the messages to be encrypted.\n * This contract is built for the following specific use case:\n *\n * - The sender and recipient know the topics ahead of time. This can either be communicated elsewhere or be implicit.\n *\n * - Only one message per topic is stored at any given time.\n *\n * - Only addresses that are authorized by the recipient can send messages. These authorized parties can overwrite, but\n * not delete the previous message for a particular topic.\n */\ncontract EncryptedSender {\n    struct TopicData {\n        // An (optional) public key used to encrypt messages for this topic. This is only necessary if the sender will\n        // not have access to the public key offchain.\n        bytes publicKey;\n\n        // The encrypted message.\n        bytes message;\n    }\n\n    struct Recipient {\n        // This maps from a hash to the data for this topic.\n        // Note: the hash is a hash of the \"subject\" or \"topic\" of the message.\n        mapping(bytes32 => TopicData) topics;\n\n        // This contains the set of all authorized senders for this recipient.\n        mapping(address => bool) authorizedSenders;\n    }\n\n    mapping(address => Recipient) private recipients;\n\n    /**\n     * @notice Authorizes `sender` to send messages to the caller.\n     */\n    function addAuthorizedSender(address sender) external {\n        recipients[msg.sender].authorizedSenders[sender] = true;\n    }\n\n    /**\n     * @notice Revokes `sender`'s authorization to send messages to the caller.\n     */\n    function removeAuthorizedSender(address sender) external {\n        recipients[msg.sender].authorizedSenders[sender] = false;\n    }\n\n    /**\n     * @notice Gets the current stored message corresponding to `recipient` and `topicHash`.\n     * @dev To decrypt messages (this requires access to the recipient's private keys), use the decryptMessage()\n     * function in common/Crypto.js.\n     */\n    function getMessage(address recipient, bytes32 topicHash) external view returns (bytes memory) {\n        return recipients[recipient].topics[topicHash].message;\n    }\n\n    /**\n     * @notice Gets the stored public key for a particular `recipient` and `topicHash`. Return value will be 0 length\n     * if no public key has been set.\n     * @dev Senders may need this public key to encrypt messages that only the `recipient` can read. If the public key\n     * is communicated offchain, this field may be left empty.\n     */\n    function getPublicKey(address recipient, bytes32 topicHash) external view returns (bytes memory) {\n        return recipients[recipient].topics[topicHash].publicKey;\n    }\n\n    /**\n     * @notice Sends `message` to `recipient_` categorized by a particular `topicHash`. This will overwrite any\n     * previous messages sent to this `recipient` with this `topicHash`.\n     * @dev To construct an encrypted message, use the encryptMessage() in common/Crypto.js.\n     * The public key for the recipient can be obtained using the getPublicKey() method.\n     */\n    function sendMessage(address recipient_, bytes32 topicHash, bytes memory message) public {\n        Recipient storage recipient = recipients[recipient_];\n        require(isAuthorizedSender(msg.sender, recipient_), \"Not authorized to send to this recipient\");\n        recipient.topics[topicHash].message = message;\n    }\n\n    function removeMessage(address recipient_, bytes32 topicHash) public {\n        Recipient storage recipient = recipients[recipient_];\n        require(isAuthorizedSender(msg.sender, recipient_), \"Not authorized to remove message\");\n        delete recipient.topics[topicHash].message;\n    }\n\n    /**\n     * @notice Sets the public key for this caller and topicHash.\n     * @dev Note: setting the public key is optional - if the publicKey is communicated or can be derived offchain by\n     * the sender, there is no need to set it here. Because there are no specific requirements for the publicKey, there\n     * is also no verification of its validity other than its length.\n     */\n    function setPublicKey(bytes memory publicKey, bytes32 topicHash) public {\n        require(publicKey.length == 64, \"Public key is the wrong length\");\n        recipients[msg.sender].topics[topicHash].publicKey = publicKey;\n    }\n\n    /**\n     * @notice Returns true if the `sender` is authorized to send to the `recipient`.\n     */\n    function isAuthorizedSender(address sender, address recipient) public view returns (bool) {\n        // Note: the recipient is always authorized to send messages to themselves.\n        return recipients[recipient].authorizedSenders[sender] || recipient == sender;\n    }\n}\n",
  "sourcePath": "/Users/kendrick/Development/Ethereum/defi-dy/contracts/uma/core/contracts/EncryptedSender.sol",
  "ast": {
    "absolutePath": "/Users/kendrick/Development/Ethereum/defi-dy/contracts/uma/core/contracts/EncryptedSender.sol",
    "exportedSymbols": {
      "EncryptedSender": [
        595
      ]
    },
    "id": 596,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 396,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Contract for sending keyed encrypted messages via the EVM\n@dev This contract uses topic hashes as keys and can store a single arbitrary encrypted message per topic at any\ngiven time. Note: there's technically nothing that requires the topics hashed or for the messages to be encrypted.\nThis contract is built for the following specific use case:\n * - The sender and recipient know the topics ahead of time. This can either be communicated elsewhere or be implicit.\n * - Only one message per topic is stored at any given time.\n * - Only addresses that are authorized by the recipient can send messages. These authorized parties can overwrite, but\nnot delete the previous message for a particular topic.",
        "fullyImplemented": true,
        "id": 595,
        "linearizedBaseContracts": [
          595
        ],
        "name": "EncryptedSender",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "EncryptedSender.TopicData",
            "id": 401,
            "members": [
              {
                "constant": false,
                "id": 398,
                "name": "publicKey",
                "nodeType": "VariableDeclaration",
                "scope": 401,
                "src": "999:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 397,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "999:5:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 400,
                "name": "message",
                "nodeType": "VariableDeclaration",
                "scope": 401,
                "src": "1059:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 399,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1059:5:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "TopicData",
            "nodeType": "StructDefinition",
            "scope": 595,
            "src": "798:281:4",
            "visibility": "public"
          },
          {
            "canonicalName": "EncryptedSender.Recipient",
            "id": 410,
            "members": [
              {
                "constant": false,
                "id": 405,
                "name": "topics",
                "nodeType": "VariableDeclaration",
                "scope": 410,
                "src": "1253:36:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TopicData_$401_storage_$",
                  "typeString": "mapping(bytes32 => struct EncryptedSender.TopicData)"
                },
                "typeName": {
                  "id": 404,
                  "keyType": {
                    "id": 402,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1261:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1253:29:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TopicData_$401_storage_$",
                    "typeString": "mapping(bytes32 => struct EncryptedSender.TopicData)"
                  },
                  "valueType": {
                    "contractScope": null,
                    "id": 403,
                    "name": "TopicData",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 401,
                    "src": "1272:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TopicData_$401_storage_ptr",
                      "typeString": "struct EncryptedSender.TopicData"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 409,
                "name": "authorizedSenders",
                "nodeType": "VariableDeclaration",
                "scope": 410,
                "src": "1379:42:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 408,
                  "keyType": {
                    "id": 406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1379:24:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 407,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Recipient",
            "nodeType": "StructDefinition",
            "scope": 595,
            "src": "1085:343:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 414,
            "name": "recipients",
            "nodeType": "VariableDeclaration",
            "scope": 595,
            "src": "1434:48:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
              "typeString": "mapping(address => struct EncryptedSender.Recipient)"
            },
            "typeName": {
              "id": 413,
              "keyType": {
                "id": 411,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1442:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1434:29:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                "typeString": "mapping(address => struct EncryptedSender.Recipient)"
              },
              "valueType": {
                "contractScope": null,
                "id": 412,
                "name": "Recipient",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 410,
                "src": "1453:9:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Recipient_$410_storage_ptr",
                  "typeString": "struct EncryptedSender.Recipient"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 429,
              "nodeType": "Block",
              "src": "1626:72:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 419,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "1636:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                              "typeString": "mapping(address => struct EncryptedSender.Recipient storage ref)"
                            }
                          },
                          "id": 422,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 420,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12443,
                              "src": "1647:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1647:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1636:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Recipient_$410_storage",
                            "typeString": "struct EncryptedSender.Recipient storage ref"
                          }
                        },
                        "id": 423,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "authorizedSenders",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 409,
                        "src": "1636:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 425,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 424,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "1677:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1636:48:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1687:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1636:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:55:4"
                }
              ]
            },
            "documentation": "@notice Authorizes `sender` to send messages to the caller.",
            "id": 430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAuthorizedSender",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 416,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "1601:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1601:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1600:16:4"
            },
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1626:0:4"
            },
            "scope": 595,
            "src": "1572:126:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 445,
              "nodeType": "Block",
              "src": "1857:73:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 435,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "1867:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                              "typeString": "mapping(address => struct EncryptedSender.Recipient storage ref)"
                            }
                          },
                          "id": 438,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 436,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12443,
                              "src": "1878:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1878:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1867:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Recipient_$410_storage",
                            "typeString": "struct EncryptedSender.Recipient storage ref"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "authorizedSenders",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 409,
                        "src": "1867:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 441,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 440,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 432,
                        "src": "1908:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1867:48:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1918:5:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1867:56:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:56:4"
                }
              ]
            },
            "documentation": "@notice Revokes `sender`'s authorization to send messages to the caller.",
            "id": 446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAuthorizedSender",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 432,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "1832:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1832:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1831:16:4"
            },
            "returnParameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1857:0:4"
            },
            "scope": 595,
            "src": "1800:130:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 463,
              "nodeType": "Block",
              "src": "2290:71:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 455,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "2307:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                              "typeString": "mapping(address => struct EncryptedSender.Recipient storage ref)"
                            }
                          },
                          "id": 457,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 456,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 448,
                            "src": "2318:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2307:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Recipient_$410_storage",
                            "typeString": "struct EncryptedSender.Recipient storage ref"
                          }
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "topics",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 405,
                        "src": "2307:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TopicData_$401_storage_$",
                          "typeString": "mapping(bytes32 => struct EncryptedSender.TopicData storage ref)"
                        }
                      },
                      "id": 460,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 459,
                        "name": "topicHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "2336:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2307:39:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TopicData_$401_storage",
                        "typeString": "struct EncryptedSender.TopicData storage ref"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "message",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 400,
                    "src": "2307:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "functionReturnParameters": 454,
                  "id": 462,
                  "nodeType": "Return",
                  "src": "2300:54:4"
                }
              ]
            },
            "documentation": "@notice Gets the current stored message corresponding to `recipient` and `topicHash`.\n@dev To decrypt messages (this requires access to the recipient's private keys), use the decryptMessage()\nfunction in common/Crypto.js.",
            "id": 464,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMessage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 448,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 464,
                  "src": "2215:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2215:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 450,
                  "name": "topicHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 464,
                  "src": "2234:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2234:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2214:38:4"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 464,
                  "src": "2276:12:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2275:14:4"
            },
            "scope": 595,
            "src": "2195:166:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 481,
              "nodeType": "Block",
              "src": "2818:73:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 473,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "2835:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                              "typeString": "mapping(address => struct EncryptedSender.Recipient storage ref)"
                            }
                          },
                          "id": 475,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 474,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 466,
                            "src": "2846:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2835:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Recipient_$410_storage",
                            "typeString": "struct EncryptedSender.Recipient storage ref"
                          }
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "topics",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 405,
                        "src": "2835:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TopicData_$401_storage_$",
                          "typeString": "mapping(bytes32 => struct EncryptedSender.TopicData storage ref)"
                        }
                      },
                      "id": 478,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 477,
                        "name": "topicHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "2864:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2835:39:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TopicData_$401_storage",
                        "typeString": "struct EncryptedSender.TopicData storage ref"
                      }
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "publicKey",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 398,
                    "src": "2835:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "functionReturnParameters": 472,
                  "id": 480,
                  "nodeType": "Return",
                  "src": "2828:56:4"
                }
              ]
            },
            "documentation": "@notice Gets the stored public key for a particular `recipient` and `topicHash`. Return value will be 0 length\nif no public key has been set.\n@dev Senders may need this public key to encrypt messages that only the `recipient` can read. If the public key\nis communicated offchain, this field may be left empty.",
            "id": 482,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPublicKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 466,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 482,
                  "src": "2743:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2743:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 468,
                  "name": "topicHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 482,
                  "src": "2762:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 467,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2742:38:4"
            },
            "returnParameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 471,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 482,
                  "src": "2804:12:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2804:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2803:14:4"
            },
            "scope": 595,
            "src": "2721:170:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 515,
              "nodeType": "Block",
              "src": "3369:229:4",
              "statements": [
                {
                  "assignments": [
                    492
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 492,
                      "name": "recipient",
                      "nodeType": "VariableDeclaration",
                      "scope": 515,
                      "src": "3379:27:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipient_$410_storage_ptr",
                        "typeString": "struct EncryptedSender.Recipient"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 491,
                        "name": "Recipient",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 410,
                        "src": "3379:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Recipient_$410_storage_ptr",
                          "typeString": "struct EncryptedSender.Recipient"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 496,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 493,
                      "name": "recipients",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "3409:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                        "typeString": "mapping(address => struct EncryptedSender.Recipient storage ref)"
                      }
                    },
                    "id": 495,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 494,
                      "name": "recipient_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "3420:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3409:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Recipient_$410_storage",
                      "typeString": "struct EncryptedSender.Recipient storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3379:52:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 499,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12443,
                              "src": "3468:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3468:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 501,
                            "name": "recipient_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 484,
                            "src": "3480:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 498,
                          "name": "isAuthorizedSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 594,
                          "src": "3449:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3449:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420617574686f72697a656420746f2073656e6420746f207468697320726563697069656e74",
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3493:42:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08b7fe23b2324d9bded822971b2711da1e95b183a942fc71559df6bb1f1774c6",
                          "typeString": "literal_string \"Not authorized to send to this recipient\""
                        },
                        "value": "Not authorized to send to this recipient"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08b7fe23b2324d9bded822971b2711da1e95b183a942fc71559df6bb1f1774c6",
                          "typeString": "literal_string \"Not authorized to send to this recipient\""
                        }
                      ],
                      "id": 497,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12446,
                        12447
                      ],
                      "referencedDeclaration": 12447,
                      "src": "3441:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3441:95:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "3441:95:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 506,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 492,
                            "src": "3546:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Recipient_$410_storage_ptr",
                              "typeString": "struct EncryptedSender.Recipient storage pointer"
                            }
                          },
                          "id": 509,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "topics",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 405,
                          "src": "3546:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TopicData_$401_storage_$",
                            "typeString": "mapping(bytes32 => struct EncryptedSender.TopicData storage ref)"
                          }
                        },
                        "id": 510,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 508,
                          "name": "topicHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 486,
                          "src": "3563:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3546:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TopicData_$401_storage",
                          "typeString": "struct EncryptedSender.TopicData storage ref"
                        }
                      },
                      "id": 511,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "message",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 400,
                      "src": "3546:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 512,
                      "name": "message",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "3584:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "3546:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "3546:45:4"
                }
              ]
            },
            "documentation": "@notice Sends `message` to `recipient_` categorized by a particular `topicHash`. This will overwrite any\nprevious messages sent to this `recipient` with this `topicHash`.\n@dev To construct an encrypted message, use the encryptMessage() in common/Crypto.js.\nThe public key for the recipient can be obtained using the getPublicKey() method.",
            "id": 516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendMessage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 484,
                  "name": "recipient_",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "3301:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3301:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 486,
                  "name": "topicHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "3321:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3321:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 488,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "3340:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3340:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3300:61:4"
            },
            "returnParameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3369:0:4"
            },
            "scope": 595,
            "src": "3280:318:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 545,
              "nodeType": "Block",
              "src": "3673:218:4",
              "statements": [
                {
                  "assignments": [
                    524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 524,
                      "name": "recipient",
                      "nodeType": "VariableDeclaration",
                      "scope": 545,
                      "src": "3683:27:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipient_$410_storage_ptr",
                        "typeString": "struct EncryptedSender.Recipient"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 523,
                        "name": "Recipient",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 410,
                        "src": "3683:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Recipient_$410_storage_ptr",
                          "typeString": "struct EncryptedSender.Recipient"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 528,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 525,
                      "name": "recipients",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "3713:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                        "typeString": "mapping(address => struct EncryptedSender.Recipient storage ref)"
                      }
                    },
                    "id": 527,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 526,
                      "name": "recipient_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "3724:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3713:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Recipient_$410_storage",
                      "typeString": "struct EncryptedSender.Recipient storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3683:52:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 531,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12443,
                              "src": "3772:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3772:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 533,
                            "name": "recipient_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 518,
                            "src": "3784:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 530,
                          "name": "isAuthorizedSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 594,
                          "src": "3753:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3753:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420617574686f72697a656420746f2072656d6f7665206d657373616765",
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3797:34:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33ebb158cc3ee9de9113143a15c48d9d04a62e640401187ccf774cd567691ddf",
                          "typeString": "literal_string \"Not authorized to remove message\""
                        },
                        "value": "Not authorized to remove message"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33ebb158cc3ee9de9113143a15c48d9d04a62e640401187ccf774cd567691ddf",
                          "typeString": "literal_string \"Not authorized to remove message\""
                        }
                      ],
                      "id": 529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12446,
                        12447
                      ],
                      "referencedDeclaration": 12447,
                      "src": "3745:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3745:87:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "3745:87:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3842:42:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 538,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 524,
                            "src": "3849:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Recipient_$410_storage_ptr",
                              "typeString": "struct EncryptedSender.Recipient storage pointer"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "topics",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 405,
                          "src": "3849:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TopicData_$401_storage_$",
                            "typeString": "mapping(bytes32 => struct EncryptedSender.TopicData storage ref)"
                          }
                        },
                        "id": 541,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 540,
                          "name": "topicHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
                          "src": "3866:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3849:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TopicData_$401_storage",
                          "typeString": "struct EncryptedSender.TopicData storage ref"
                        }
                      },
                      "id": 542,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "message",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 400,
                      "src": "3849:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 544,
                  "nodeType": "ExpressionStatement",
                  "src": "3842:42:4"
                }
              ]
            },
            "documentation": null,
            "id": 546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeMessage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 518,
                  "name": "recipient_",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "3627:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3627:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 520,
                  "name": "topicHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "3647:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3647:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3626:39:4"
            },
            "returnParameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3673:0:4"
            },
            "scope": 595,
            "src": "3604:287:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 572,
              "nodeType": "Block",
              "src": "4359:154:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 554,
                            "name": "publicKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "4377:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4377:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3634",
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4397:2:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_64_by_1",
                            "typeString": "int_const 64"
                          },
                          "value": "64"
                        },
                        "src": "4377:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5075626c6963206b6579206973207468652077726f6e67206c656e677468",
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4401:32:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0e49a538abf47c648865e2c18bc6efae53324392e92cb46796a07a4a378862a",
                          "typeString": "literal_string \"Public key is the wrong length\""
                        },
                        "value": "Public key is the wrong length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0e49a538abf47c648865e2c18bc6efae53324392e92cb46796a07a4a378862a",
                          "typeString": "literal_string \"Public key is the wrong length\""
                        }
                      ],
                      "id": 553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12446,
                        12447
                      ],
                      "referencedDeclaration": 12447,
                      "src": "4369:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4369:65:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "4369:65:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 561,
                              "name": "recipients",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 414,
                              "src": "4444:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                                "typeString": "mapping(address => struct EncryptedSender.Recipient storage ref)"
                              }
                            },
                            "id": 564,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 562,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12443,
                                "src": "4455:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4455:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4444:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Recipient_$410_storage",
                              "typeString": "struct EncryptedSender.Recipient storage ref"
                            }
                          },
                          "id": 565,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "topics",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 405,
                          "src": "4444:29:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TopicData_$401_storage_$",
                            "typeString": "mapping(bytes32 => struct EncryptedSender.TopicData storage ref)"
                          }
                        },
                        "id": 567,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 566,
                          "name": "topicHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 550,
                          "src": "4474:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4444:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TopicData_$401_storage",
                          "typeString": "struct EncryptedSender.TopicData storage ref"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "publicKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 398,
                      "src": "4444:50:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 569,
                      "name": "publicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "4497:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "4444:62:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "4444:62:4"
                }
              ]
            },
            "documentation": "@notice Sets the public key for this caller and topicHash.\n@dev Note: setting the public key is optional - if the publicKey is communicated or can be derived offchain by\nthe sender, there is no need to set it here. Because there are no specific requirements for the publicKey, there\nis also no verification of its validity other than its length.",
            "id": 573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPublicKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 548,
                  "name": "publicKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "4309:22:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4309:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 550,
                  "name": "topicHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "4333:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4333:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4308:43:4"
            },
            "returnParameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4359:0:4"
            },
            "scope": 595,
            "src": "4287:226:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "4711:178:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 582,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "4812:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                              "typeString": "mapping(address => struct EncryptedSender.Recipient storage ref)"
                            }
                          },
                          "id": 584,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 583,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 577,
                            "src": "4823:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4812:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Recipient_$410_storage",
                            "typeString": "struct EncryptedSender.Recipient storage ref"
                          }
                        },
                        "id": 585,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "authorizedSenders",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 409,
                        "src": "4812:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 587,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 586,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "4852:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4812:47:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 588,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 577,
                        "src": "4863:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 589,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "4876:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4863:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4812:70:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 581,
                  "id": 592,
                  "nodeType": "Return",
                  "src": "4805:77:4"
                }
              ]
            },
            "documentation": "@notice Returns true if the `sender` is authorized to send to the `recipient`.",
            "id": 594,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorizedSender",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 575,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "4649:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4649:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 577,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "4665:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4648:35:4"
            },
            "returnParameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 580,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "4705:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4705:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4704:6:4"
            },
            "scope": 595,
            "src": "4621:268:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 596,
        "src": "767:4124:4"
      }
    ],
    "src": "0:4892:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/kendrick/Development/Ethereum/defi-dy/contracts/uma/core/contracts/EncryptedSender.sol",
    "exportedSymbols": {
      "EncryptedSender": [
        595
      ]
    },
    "id": 596,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 396,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Contract for sending keyed encrypted messages via the EVM\n@dev This contract uses topic hashes as keys and can store a single arbitrary encrypted message per topic at any\ngiven time. Note: there's technically nothing that requires the topics hashed or for the messages to be encrypted.\nThis contract is built for the following specific use case:\n * - The sender and recipient know the topics ahead of time. This can either be communicated elsewhere or be implicit.\n * - Only one message per topic is stored at any given time.\n * - Only addresses that are authorized by the recipient can send messages. These authorized parties can overwrite, but\nnot delete the previous message for a particular topic.",
        "fullyImplemented": true,
        "id": 595,
        "linearizedBaseContracts": [
          595
        ],
        "name": "EncryptedSender",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "EncryptedSender.TopicData",
            "id": 401,
            "members": [
              {
                "constant": false,
                "id": 398,
                "name": "publicKey",
                "nodeType": "VariableDeclaration",
                "scope": 401,
                "src": "999:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 397,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "999:5:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 400,
                "name": "message",
                "nodeType": "VariableDeclaration",
                "scope": 401,
                "src": "1059:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 399,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1059:5:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "TopicData",
            "nodeType": "StructDefinition",
            "scope": 595,
            "src": "798:281:4",
            "visibility": "public"
          },
          {
            "canonicalName": "EncryptedSender.Recipient",
            "id": 410,
            "members": [
              {
                "constant": false,
                "id": 405,
                "name": "topics",
                "nodeType": "VariableDeclaration",
                "scope": 410,
                "src": "1253:36:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TopicData_$401_storage_$",
                  "typeString": "mapping(bytes32 => struct EncryptedSender.TopicData)"
                },
                "typeName": {
                  "id": 404,
                  "keyType": {
                    "id": 402,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1261:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1253:29:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TopicData_$401_storage_$",
                    "typeString": "mapping(bytes32 => struct EncryptedSender.TopicData)"
                  },
                  "valueType": {
                    "contractScope": null,
                    "id": 403,
                    "name": "TopicData",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 401,
                    "src": "1272:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TopicData_$401_storage_ptr",
                      "typeString": "struct EncryptedSender.TopicData"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 409,
                "name": "authorizedSenders",
                "nodeType": "VariableDeclaration",
                "scope": 410,
                "src": "1379:42:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 408,
                  "keyType": {
                    "id": 406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1379:24:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 407,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Recipient",
            "nodeType": "StructDefinition",
            "scope": 595,
            "src": "1085:343:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 414,
            "name": "recipients",
            "nodeType": "VariableDeclaration",
            "scope": 595,
            "src": "1434:48:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
              "typeString": "mapping(address => struct EncryptedSender.Recipient)"
            },
            "typeName": {
              "id": 413,
              "keyType": {
                "id": 411,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1442:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1434:29:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                "typeString": "mapping(address => struct EncryptedSender.Recipient)"
              },
              "valueType": {
                "contractScope": null,
                "id": 412,
                "name": "Recipient",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 410,
                "src": "1453:9:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Recipient_$410_storage_ptr",
                  "typeString": "struct EncryptedSender.Recipient"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 429,
              "nodeType": "Block",
              "src": "1626:72:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 419,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "1636:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                              "typeString": "mapping(address => struct EncryptedSender.Recipient storage ref)"
                            }
                          },
                          "id": 422,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 420,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12443,
                              "src": "1647:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1647:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1636:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Recipient_$410_storage",
                            "typeString": "struct EncryptedSender.Recipient storage ref"
                          }
                        },
                        "id": 423,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "authorizedSenders",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 409,
                        "src": "1636:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 425,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 424,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "1677:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1636:48:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1687:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1636:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:55:4"
                }
              ]
            },
            "documentation": "@notice Authorizes `sender` to send messages to the caller.",
            "id": 430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAuthorizedSender",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 416,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "1601:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1601:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1600:16:4"
            },
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1626:0:4"
            },
            "scope": 595,
            "src": "1572:126:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 445,
              "nodeType": "Block",
              "src": "1857:73:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 435,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "1867:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                              "typeString": "mapping(address => struct EncryptedSender.Recipient storage ref)"
                            }
                          },
                          "id": 438,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 436,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12443,
                              "src": "1878:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1878:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1867:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Recipient_$410_storage",
                            "typeString": "struct EncryptedSender.Recipient storage ref"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "authorizedSenders",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 409,
                        "src": "1867:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 441,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 440,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 432,
                        "src": "1908:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1867:48:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1918:5:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1867:56:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:56:4"
                }
              ]
            },
            "documentation": "@notice Revokes `sender`'s authorization to send messages to the caller.",
            "id": 446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAuthorizedSender",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 432,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "1832:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1832:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1831:16:4"
            },
            "returnParameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1857:0:4"
            },
            "scope": 595,
            "src": "1800:130:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 463,
              "nodeType": "Block",
              "src": "2290:71:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 455,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "2307:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                              "typeString": "mapping(address => struct EncryptedSender.Recipient storage ref)"
                            }
                          },
                          "id": 457,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 456,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 448,
                            "src": "2318:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2307:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Recipient_$410_storage",
                            "typeString": "struct EncryptedSender.Recipient storage ref"
                          }
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "topics",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 405,
                        "src": "2307:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TopicData_$401_storage_$",
                          "typeString": "mapping(bytes32 => struct EncryptedSender.TopicData storage ref)"
                        }
                      },
                      "id": 460,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 459,
                        "name": "topicHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "2336:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2307:39:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TopicData_$401_storage",
                        "typeString": "struct EncryptedSender.TopicData storage ref"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "message",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 400,
                    "src": "2307:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "functionReturnParameters": 454,
                  "id": 462,
                  "nodeType": "Return",
                  "src": "2300:54:4"
                }
              ]
            },
            "documentation": "@notice Gets the current stored message corresponding to `recipient` and `topicHash`.\n@dev To decrypt messages (this requires access to the recipient's private keys), use the decryptMessage()\nfunction in common/Crypto.js.",
            "id": 464,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMessage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 448,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 464,
                  "src": "2215:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2215:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 450,
                  "name": "topicHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 464,
                  "src": "2234:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2234:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2214:38:4"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 464,
                  "src": "2276:12:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2275:14:4"
            },
            "scope": 595,
            "src": "2195:166:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 481,
              "nodeType": "Block",
              "src": "2818:73:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 473,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "2835:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                              "typeString": "mapping(address => struct EncryptedSender.Recipient storage ref)"
                            }
                          },
                          "id": 475,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 474,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 466,
                            "src": "2846:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2835:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Recipient_$410_storage",
                            "typeString": "struct EncryptedSender.Recipient storage ref"
                          }
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "topics",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 405,
                        "src": "2835:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TopicData_$401_storage_$",
                          "typeString": "mapping(bytes32 => struct EncryptedSender.TopicData storage ref)"
                        }
                      },
                      "id": 478,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 477,
                        "name": "topicHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "2864:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2835:39:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TopicData_$401_storage",
                        "typeString": "struct EncryptedSender.TopicData storage ref"
                      }
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "publicKey",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 398,
                    "src": "2835:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "functionReturnParameters": 472,
                  "id": 480,
                  "nodeType": "Return",
                  "src": "2828:56:4"
                }
              ]
            },
            "documentation": "@notice Gets the stored public key for a particular `recipient` and `topicHash`. Return value will be 0 length\nif no public key has been set.\n@dev Senders may need this public key to encrypt messages that only the `recipient` can read. If the public key\nis communicated offchain, this field may be left empty.",
            "id": 482,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPublicKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 466,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 482,
                  "src": "2743:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2743:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 468,
                  "name": "topicHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 482,
                  "src": "2762:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 467,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2742:38:4"
            },
            "returnParameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 471,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 482,
                  "src": "2804:12:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2804:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2803:14:4"
            },
            "scope": 595,
            "src": "2721:170:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 515,
              "nodeType": "Block",
              "src": "3369:229:4",
              "statements": [
                {
                  "assignments": [
                    492
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 492,
                      "name": "recipient",
                      "nodeType": "VariableDeclaration",
                      "scope": 515,
                      "src": "3379:27:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipient_$410_storage_ptr",
                        "typeString": "struct EncryptedSender.Recipient"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 491,
                        "name": "Recipient",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 410,
                        "src": "3379:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Recipient_$410_storage_ptr",
                          "typeString": "struct EncryptedSender.Recipient"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 496,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 493,
                      "name": "recipients",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "3409:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                        "typeString": "mapping(address => struct EncryptedSender.Recipient storage ref)"
                      }
                    },
                    "id": 495,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 494,
                      "name": "recipient_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "3420:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3409:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Recipient_$410_storage",
                      "typeString": "struct EncryptedSender.Recipient storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3379:52:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 499,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12443,
                              "src": "3468:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3468:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 501,
                            "name": "recipient_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 484,
                            "src": "3480:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 498,
                          "name": "isAuthorizedSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 594,
                          "src": "3449:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3449:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420617574686f72697a656420746f2073656e6420746f207468697320726563697069656e74",
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3493:42:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08b7fe23b2324d9bded822971b2711da1e95b183a942fc71559df6bb1f1774c6",
                          "typeString": "literal_string \"Not authorized to send to this recipient\""
                        },
                        "value": "Not authorized to send to this recipient"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08b7fe23b2324d9bded822971b2711da1e95b183a942fc71559df6bb1f1774c6",
                          "typeString": "literal_string \"Not authorized to send to this recipient\""
                        }
                      ],
                      "id": 497,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12446,
                        12447
                      ],
                      "referencedDeclaration": 12447,
                      "src": "3441:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3441:95:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "3441:95:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 506,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 492,
                            "src": "3546:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Recipient_$410_storage_ptr",
                              "typeString": "struct EncryptedSender.Recipient storage pointer"
                            }
                          },
                          "id": 509,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "topics",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 405,
                          "src": "3546:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TopicData_$401_storage_$",
                            "typeString": "mapping(bytes32 => struct EncryptedSender.TopicData storage ref)"
                          }
                        },
                        "id": 510,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 508,
                          "name": "topicHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 486,
                          "src": "3563:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3546:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TopicData_$401_storage",
                          "typeString": "struct EncryptedSender.TopicData storage ref"
                        }
                      },
                      "id": 511,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "message",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 400,
                      "src": "3546:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 512,
                      "name": "message",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "3584:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "3546:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "3546:45:4"
                }
              ]
            },
            "documentation": "@notice Sends `message` to `recipient_` categorized by a particular `topicHash`. This will overwrite any\nprevious messages sent to this `recipient` with this `topicHash`.\n@dev To construct an encrypted message, use the encryptMessage() in common/Crypto.js.\nThe public key for the recipient can be obtained using the getPublicKey() method.",
            "id": 516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendMessage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 484,
                  "name": "recipient_",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "3301:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3301:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 486,
                  "name": "topicHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "3321:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3321:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 488,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "3340:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3340:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3300:61:4"
            },
            "returnParameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3369:0:4"
            },
            "scope": 595,
            "src": "3280:318:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 545,
              "nodeType": "Block",
              "src": "3673:218:4",
              "statements": [
                {
                  "assignments": [
                    524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 524,
                      "name": "recipient",
                      "nodeType": "VariableDeclaration",
                      "scope": 545,
                      "src": "3683:27:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Recipient_$410_storage_ptr",
                        "typeString": "struct EncryptedSender.Recipient"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 523,
                        "name": "Recipient",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 410,
                        "src": "3683:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Recipient_$410_storage_ptr",
                          "typeString": "struct EncryptedSender.Recipient"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 528,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 525,
                      "name": "recipients",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "3713:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                        "typeString": "mapping(address => struct EncryptedSender.Recipient storage ref)"
                      }
                    },
                    "id": 527,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 526,
                      "name": "recipient_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "3724:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3713:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Recipient_$410_storage",
                      "typeString": "struct EncryptedSender.Recipient storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3683:52:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 531,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12443,
                              "src": "3772:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3772:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 533,
                            "name": "recipient_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 518,
                            "src": "3784:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 530,
                          "name": "isAuthorizedSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 594,
                          "src": "3753:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3753:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420617574686f72697a656420746f2072656d6f7665206d657373616765",
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3797:34:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33ebb158cc3ee9de9113143a15c48d9d04a62e640401187ccf774cd567691ddf",
                          "typeString": "literal_string \"Not authorized to remove message\""
                        },
                        "value": "Not authorized to remove message"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33ebb158cc3ee9de9113143a15c48d9d04a62e640401187ccf774cd567691ddf",
                          "typeString": "literal_string \"Not authorized to remove message\""
                        }
                      ],
                      "id": 529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12446,
                        12447
                      ],
                      "referencedDeclaration": 12447,
                      "src": "3745:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3745:87:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "3745:87:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3842:42:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 538,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 524,
                            "src": "3849:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Recipient_$410_storage_ptr",
                              "typeString": "struct EncryptedSender.Recipient storage pointer"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "topics",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 405,
                          "src": "3849:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TopicData_$401_storage_$",
                            "typeString": "mapping(bytes32 => struct EncryptedSender.TopicData storage ref)"
                          }
                        },
                        "id": 541,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 540,
                          "name": "topicHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
                          "src": "3866:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3849:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TopicData_$401_storage",
                          "typeString": "struct EncryptedSender.TopicData storage ref"
                        }
                      },
                      "id": 542,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "message",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 400,
                      "src": "3849:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 544,
                  "nodeType": "ExpressionStatement",
                  "src": "3842:42:4"
                }
              ]
            },
            "documentation": null,
            "id": 546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeMessage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 518,
                  "name": "recipient_",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "3627:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3627:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 520,
                  "name": "topicHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "3647:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3647:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3626:39:4"
            },
            "returnParameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3673:0:4"
            },
            "scope": 595,
            "src": "3604:287:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 572,
              "nodeType": "Block",
              "src": "4359:154:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 554,
                            "name": "publicKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "4377:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4377:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3634",
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4397:2:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_64_by_1",
                            "typeString": "int_const 64"
                          },
                          "value": "64"
                        },
                        "src": "4377:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5075626c6963206b6579206973207468652077726f6e67206c656e677468",
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4401:32:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0e49a538abf47c648865e2c18bc6efae53324392e92cb46796a07a4a378862a",
                          "typeString": "literal_string \"Public key is the wrong length\""
                        },
                        "value": "Public key is the wrong length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0e49a538abf47c648865e2c18bc6efae53324392e92cb46796a07a4a378862a",
                          "typeString": "literal_string \"Public key is the wrong length\""
                        }
                      ],
                      "id": 553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12446,
                        12447
                      ],
                      "referencedDeclaration": 12447,
                      "src": "4369:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4369:65:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "4369:65:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 561,
                              "name": "recipients",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 414,
                              "src": "4444:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                                "typeString": "mapping(address => struct EncryptedSender.Recipient storage ref)"
                              }
                            },
                            "id": 564,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 562,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12443,
                                "src": "4455:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4455:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4444:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Recipient_$410_storage",
                              "typeString": "struct EncryptedSender.Recipient storage ref"
                            }
                          },
                          "id": 565,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "topics",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 405,
                          "src": "4444:29:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TopicData_$401_storage_$",
                            "typeString": "mapping(bytes32 => struct EncryptedSender.TopicData storage ref)"
                          }
                        },
                        "id": 567,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 566,
                          "name": "topicHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 550,
                          "src": "4474:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4444:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TopicData_$401_storage",
                          "typeString": "struct EncryptedSender.TopicData storage ref"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "publicKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 398,
                      "src": "4444:50:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 569,
                      "name": "publicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "4497:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "4444:62:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "4444:62:4"
                }
              ]
            },
            "documentation": "@notice Sets the public key for this caller and topicHash.\n@dev Note: setting the public key is optional - if the publicKey is communicated or can be derived offchain by\nthe sender, there is no need to set it here. Because there are no specific requirements for the publicKey, there\nis also no verification of its validity other than its length.",
            "id": 573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPublicKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 548,
                  "name": "publicKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "4309:22:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4309:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 550,
                  "name": "topicHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "4333:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4333:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4308:43:4"
            },
            "returnParameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4359:0:4"
            },
            "scope": 595,
            "src": "4287:226:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "4711:178:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 582,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "4812:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$410_storage_$",
                              "typeString": "mapping(address => struct EncryptedSender.Recipient storage ref)"
                            }
                          },
                          "id": 584,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 583,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 577,
                            "src": "4823:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4812:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Recipient_$410_storage",
                            "typeString": "struct EncryptedSender.Recipient storage ref"
                          }
                        },
                        "id": 585,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "authorizedSenders",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 409,
                        "src": "4812:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 587,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 586,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "4852:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4812:47:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 588,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 577,
                        "src": "4863:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 589,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "4876:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4863:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4812:70:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 581,
                  "id": 592,
                  "nodeType": "Return",
                  "src": "4805:77:4"
                }
              ]
            },
            "documentation": "@notice Returns true if the `sender` is authorized to send to the `recipient`.",
            "id": 594,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorizedSender",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 575,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "4649:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4649:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 577,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "4665:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4648:35:4"
            },
            "returnParameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 580,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "4705:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4705:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4704:6:4"
            },
            "scope": 595,
            "src": "4621:268:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 596,
        "src": "767:4124:4"
      }
    ],
    "src": "0:4892:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-11-09T13:45:25.513Z",
  "devdoc": {
    "details": "This contract uses topic hashes as keys and can store a single arbitrary encrypted message per topic at any given time. Note: there's technically nothing that requires the topics hashed or for the messages to be encrypted. This contract is built for the following specific use case: * - The sender and recipient know the topics ahead of time. This can either be communicated elsewhere or be implicit. * - Only one message per topic is stored at any given time. * - Only addresses that are authorized by the recipient can send messages. These authorized parties can overwrite, but not delete the previous message for a particular topic.",
    "methods": {
      "getMessage(address,bytes32)": {
        "details": "To decrypt messages (this requires access to the recipient's private keys), use the decryptMessage() function in common/Crypto.js."
      },
      "getPublicKey(address,bytes32)": {
        "details": "Senders may need this public key to encrypt messages that only the `recipient` can read. If the public key is communicated offchain, this field may be left empty."
      },
      "sendMessage(address,bytes32,bytes)": {
        "details": "To construct an encrypted message, use the encryptMessage() in common/Crypto.js. The public key for the recipient can be obtained using the getPublicKey() method."
      },
      "setPublicKey(bytes,bytes32)": {
        "details": "Note: setting the public key is optional - if the publicKey is communicated or can be derived offchain by the sender, there is no need to set it here. Because there are no specific requirements for the publicKey, there is also no verification of its validity other than its length."
      }
    },
    "title": "Contract for sending keyed encrypted messages via the EVM"
  },
  "userdoc": {
    "methods": {
      "addAuthorizedSender(address)": {
        "notice": "Authorizes `sender` to send messages to the caller."
      },
      "getMessage(address,bytes32)": {
        "notice": "Gets the current stored message corresponding to `recipient` and `topicHash`."
      },
      "getPublicKey(address,bytes32)": {
        "notice": "Gets the stored public key for a particular `recipient` and `topicHash`. Return value will be 0 length if no public key has been set."
      },
      "isAuthorizedSender(address,address)": {
        "notice": "Returns true if the `sender` is authorized to send to the `recipient`."
      },
      "removeAuthorizedSender(address)": {
        "notice": "Revokes `sender`'s authorization to send messages to the caller."
      },
      "sendMessage(address,bytes32,bytes)": {
        "notice": "Sends `message` to `recipient_` categorized by a particular `topicHash`. This will overwrite any previous messages sent to this `recipient` with this `topicHash`."
      },
      "setPublicKey(bytes,bytes32)": {
        "notice": "Sets the public key for this caller and topicHash."
      }
    }
  }
}